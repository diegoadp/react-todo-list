{"version":3,"sources":["components/Todo/Todo.tsx","components/Form/Form.tsx","components/FilterButton/FilterButton.tsx","utils/mockData.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Todo","props","useState","isEditing","setIsEditing","newName","setNewName","editingTemplate","onSubmit","e","preventDefault","editTask","id","className","htmlFor","name","type","value","required","onChange","target","role","onClick","viewTemplate","defaultChecked","done","toggleTaskCompleted","deleteTask","Form","setName","addTask","currentTarget","FilterButton","isPressed","setFilter","DATA","FILTER_MAP","All","Active","task","Done","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","filterList","tasksNoun","length","tasksRemaining","newTask","Math","floor","Date","now","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10fd2fb6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Item } from \"../../types/Item\";\n\ntype Props = {\n  toggleTaskCompleted: (id: string) => void;\n  deleteTask: (id: string) => void;\n  editTask: (id: string, newName: string) => void;\n};\n\nfunction Todo(props: Item & Props) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewName(e.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setIsEditing(false);\n  };\n\n  const editingTemplate = (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label className=\"lead mr-3\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          type=\"text\"\n          value={newName}\n          required\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"btn-group\" role=\"group\">\n        <button className=\"btn btn-primary\" onClick={() => setIsEditing(false)}>\n          Cancel\n        </button>\n        <button className=\"btn btn-primary\">Save</button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div>\n      <div>\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.done}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"lead ml-3\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\" role=\"group\">\n        <button className=\"btn btn-primary\" onClick={() => setIsEditing(true)}>\n          Edit\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <li className=\"list-group-item\">\n      {isEditing ? editingTemplate : viewTemplate}\n    </li>\n  );\n}\n\nexport default Todo;\n","import React, { useState } from \"react\";\n\ntype Props = {\n  addTask: (name: string) => void;\n};\n\nfunction Form(props: Props) {\n  const [name, setName] = useState(\"\");\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>\n        <label htmlFor=\"new-todo-input\">What needs to be done?</label>\n      </h2>\n      <div className=\"form-inline mb-3\">\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          id=\"new-todo-input\"\n          name=\"text\"\n          value={name}\n          required\n          onChange={handleChange}\n        />\n        <button className=\"btn btn-primary ml-2\" type=\"submit\">\n          Add\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\ntype Props = {\n  name: string;\n  isPressed: boolean;\n  setFilter: React.Dispatch<React.SetStateAction<string>>;\n};\n\nfunction FilterButton(props: Props) {\n  return (\n    <button\n      className=\"btn btn-secondary\"\n      type=\"button\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span>Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;\n","export const DATA = [\n  { id: 'todo-0', name: \"Eat\", done: true },\n  { id: 'todo-1', name: \"Sleep\", done: false },\n  { id: 'todo-2', name: \"Repeat\", done: false },\n];\n","import React, { useState } from \"react\";\nimport Todo from \"./components/Todo/Todo\";\nimport Form from \"./components/Form/Form\";\nimport FilterButton from \"./components/FilterButton/FilterButton\";\nimport { DATA } from \"./utils/mockData\";\nimport { Item } from \"./types/Item\";\n\nconst FILTER_MAP: { [key: string]: (prop: Item) => boolean } = {\n  All: () => true,\n  Active: (task) => !task.done,\n  Done: (task) => task.done,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App() {\n  const [tasks, setTasks] = useState(DATA);\n  const [filter, setFilter] = useState(\"All\");\n\n  const toggleTaskCompleted = (id: string) => {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, done: !task.done };\n      } else {\n        return task;\n      }\n    });\n    setTasks(updatedTasks);\n  };\n\n  const addTask = (name: string) => {\n    const newTask = {\n      id: \"todo-\" + Math.floor(Date.now() * Math.random()),\n      name: name,\n      done: false,\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  const deleteTask = (id: string) => {\n    const remainingTasks = tasks.filter((task) => {\n      return id !== task.id;\n    });\n    setTasks(remainingTasks);\n  };\n\n  const editTask = (id: string, newName: string) => {\n    const editedTaskList = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, name: newName };\n      } else {\n        return task;\n      }\n    });\n    setTasks(editedTaskList);\n  };\n\n  const taskList = tasks.filter(FILTER_MAP[filter]).map((task) => {\n    return (\n      <Todo\n        key={task.id}\n        id={task.id}\n        name={task.name}\n        done={task.done}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    );\n  });\n\n  const filterList = FILTER_NAMES.map((name) => {\n    return (\n      <FilterButton\n        key={name}\n        name={name}\n        isPressed={name === filter}\n        setFilter={setFilter}\n      />\n    );\n  });\n\n  const tasksNoun = taskList.length === 1 ? \"tasks\" : \"task\";\n  const tasksRemaining = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex justify-content-center\">\n        <h1 className=\"mt-5 mb-5\">React Todo List</h1>\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        <Form addTask={addTask} />\n      </div>\n      <div className=\"d-flex justify-content-center px-5 mx-5 mb-5 btn-group role=group\">{filterList}</div>\n      <div className=\"d-flex justify-content-center\">\n        <h2>{tasksRemaining}</h2>\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"card w-50\">\n          <ul className=\"list-group list-group-flush\">{taskList}</ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}